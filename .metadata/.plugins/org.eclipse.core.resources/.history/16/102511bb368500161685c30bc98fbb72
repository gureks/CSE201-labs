/**
 * @author Gurek 2015033
 */

public class Complex2
{
	private Object real;
	private Object img;
	
	Complex2(Object real, Object img)
	{
		this.real=real;
		this.img=img;
	}
	
	public String toString()
	{
		if(real instanceof double)
		{
			if (img >= 0)
				return "" + real + "+" + img + "i";
			else 
				return "" + real + img + "i";	
		}
	}
	
	public Complex2 add(Complex2 a, Complex2 b)
	{
		if((a.real instanceof Double) || (b.real instanceof Double) 
				|| (a.img instanceof Double) || (b.img instanceof Double))
		{
			Complex2 sum = new Complex2((double)a.real+(double)b.real, (double)a.img+(double)b.img);
			return sum;
		}
		else if((a.real instanceof Float) || (b.real instanceof Float) 
				|| (a.img instanceof Float) || (b.img instanceof Float))
		{
			Complex2 sum = new Complex2((float)a.real+(float)b.real, (float)a.img+(float)b.img);
			return sum;
		}
		else
		{
			Complex2 sum = new Complex2((int)a.real+(int)b.real, (int)a.img+(int)b.img);
			return sum;
		}
	}
	
	public Complex2 subtract(Complex2 a, Complex2 b)
	{
		if((a.real instanceof Double) || (b.real instanceof Double) 
				|| (a.img instanceof Double) || (b.img instanceof Double))
		{
			Complex2 diff = new Complex2((double)a.real-(double)b.real, (double)a.img-(double)b.img);
			return diff;
		}
		else if((a.real instanceof Float) || (b.real instanceof Float) 
				|| (a.img instanceof Float) || (b.img instanceof Float))
		{
			Complex2 diff = new Complex2((float)a.real-(float)b.real, (float)a.img-(float)b.img);
			return diff;
		}
		else
		{
			Complex2 diff = new Complex2((int)a.real-(int)b.real, (int)a.img-(int)b.img);
			return diff;
		}
	}
	
	public Complex2 multiply(Complex2 a, Complex2 b)
	{
		if((a.real instanceof Double) || (b.real instanceof Double) 
				|| (a.img instanceof Double) || (b.img instanceof Double))
		{
			Complex2 product = new Complex2((double)a.real*(double)b.real-(double)a.img*(double)b.img, (double)a.img*(double)b.real+(double)a.real*(double)b.img);
			return product;
		}
		else if((a.real instanceof Float) || (b.real instanceof Float) 
				|| (a.img instanceof Float) || (b.img instanceof Float))
		{
			Complex2 product = new Complex2((float)a.real*(float)b.real-(float)a.img*(float)b.img, (float)a.img*(float)b.real+(float)a.real*(float)b.img);
			return product;
		}
		else
		{
			Complex2 product = new Complex2((int)a.real*(int)b.real-(int)a.img*(int)b.img, (int)a.img*(int)b.real+(int)a.real*(int)b.img);
			return product;
		}
	}
	
	public Complex1 conjugate()
	{
		Complex1 conj = new Complex1(real, -1*img);
		return conj;
	}
	
	public float absolute()
	{
		float val = (float)Math.sqrt(real*real + img*img);
		return val;
	}
}
